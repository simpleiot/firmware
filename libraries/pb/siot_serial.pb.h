/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7-dev */

#ifndef PB_SIOT_SERIAL_PB_H_INCLUDED
#define PB_SIOT_SERIAL_PB_H_INCLUDED
#include <pb.h>
#include "point.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _siot_Serial {
    char subject[63];
    pb_size_t points_count;
    Point points[5];
} siot_Serial;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define siot_Serial_init_default                 {"", 0, {Point_init_default, Point_init_default, Point_init_default, Point_init_default, Point_init_default}}
#define siot_Serial_init_zero                    {"", 0, {Point_init_zero, Point_init_zero, Point_init_zero, Point_init_zero, Point_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define siot_Serial_subject_tag                  1
#define siot_Serial_points_tag                   2

/* Struct field encoding specification for nanopb */
#define siot_Serial_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   subject,           1) \
X(a, STATIC,   REPEATED, MESSAGE,  points,            2)
#define siot_Serial_CALLBACK NULL
#define siot_Serial_DEFAULT NULL
#define siot_Serial_points_MSGTYPE Point

extern const pb_msgdesc_t siot_Serial_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define siot_Serial_fields &siot_Serial_msg

/* Maximum encoded size of messages (where known) */
#define siot_Serial_size                         689

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
